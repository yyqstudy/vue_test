## 全局事件总线（GlobalEventBus）
    本质是自定义事件，给$bus（图中的x，F12开发者工具的<Root>)绑定
--------------------------
****要实现让所有组件访问到x，只能放在Vue原型上***
在main.js引入Vue.prototype.x={a:1,b:2}
因为VueComponent.prototype.__proto__ === Vue.prototype

 Student组件和School组件之间实现通信
 在main.js引入
   const demo = Vue.extend({})
   const d =new demo()
   Vue.prototype.x = d //d是vuecomponent的实例对象,此时的d能调用$on,$off,$emit

   或者
   //第二种: beforeCreate()
       beforeCreate() {
           Vue.prototype.$bus = this //安装全局事件总线
       }


接着在School.vue调用$on
在Student.vue写方法sendStudentNameToSchool调用$emit

在School组件销毁之前，要它解绑事件$off



--------------------------

 1. 一种组件间通信的方式，适用于<span style="color:red">任意组件间通信</span>。

 2. 安装全局事件总线：

    ```js
    new Vue({
    	......
    	beforeCreate() {
    		Vue.prototype.$bus = this //安装全局事件总线，$bus就是当前应用的vm
    	},
        ......
    })
    ```

 3. 使用事件总线：

    1. 接收数据：A组件想接收数据，则在A组件中给$bus绑定自定义事件，事件的<span style="color:red">回调留在A组件自身。</span>

       ```js
       methods(){
         demo(data){......}
       }
       ......
       mounted() {
         this.$bus.$on('xxxx',this.demo)
       }
       ```

    2. 提供数据：```this.$bus.$emit('xxxx',数据)```

 4. 最好在beforeDestroy钩子中，用$off去解绑<span style="color:red">当前组件所用到的</span>事件。
