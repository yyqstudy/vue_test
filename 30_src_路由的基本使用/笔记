安装 npm i vue-router

1、在main.js

//引入路由
import VueRouter from 'vue-router'
//应用路由插件
Vue.use(VueRouter)


2、创建router文件夹，里面创建index.js(专门用于创建整个应用的路由器)
可以使用router属性

3、回到main.js
   //引入路由器
   import router from './router'

4、App.vue

   <router-link>标签实现路由的切换
   跳转不用href而是用to, active-class点击时候会高亮
   实现效果，点击导航栏，上面的网址会改变，比如
   点击Home ==> http://localhost:8080/#/home

   指定组件的呈现位置
   <router-view></router-view>

二、
把顶部区域变成一个组件---Banner.vue(一般组件）

文件夹pages：放路由组件
文件夹components: 放一般组件

不用的路由组件：被销毁了
==========================================
## 路由

 1. 理解： 一个路由（route）就是一组映射关系（key - value），多个路由需要路由器（router）进行管理。
 2. 前端路由：key是路径，value是组件。

 ### 1.基本使用

 1. 安装vue-router，命令：```npm i vue-router```

 2. 应用插件：```Vue.use(VueRouter)```

 3. 编写router配置项:

    ```js
    //引入VueRouter
    import VueRouter from 'vue-router'
    //引入Luyou 组件
    import About from '../components/About'
    import Home from '../components/Home'

    //创建router实例对象，去管理一组一组的路由规则
    const router = new VueRouter({
    	routes:[
    		{
    			path:'/about',
    			component:About
    		},
    		{
    			path:'/home',
    			component:Home
    		}
    	]
    })

    //暴露router
    export default router
    ```

 4. 实现切换（active-class可配置高亮样式）

    ```vue
    <router-link active-class="active" to="/about">About</router-link>
    ```

 5. 指定展示位置

    ```vue
    <router-view></router-view>
    ```
### 2.几个注意点

 1. 路由组件通常存放在```pages```文件夹，一般组件通常存放在```components```文件夹。
 2. 通过切换，“隐藏”了的路由组件，默认是被销毁掉的，需要的时候再去挂载。
 3. 每个组件都有自己的```$route```属性，里面存储着自己的路由信息。
 4. 整个应用只有一个router，可以通过组件的```$router```属性获取到。
