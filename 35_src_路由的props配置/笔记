
* Message组件向Detail组件传递参数

很多参数时候就要用props配置
1、在index.jsp
谁接收参数，就把props配置写在谁身上
2、Detail.vue用props配置接收

=========================================
 ### 7.路由的props配置

 ​	作用：让路由组件更方便的收到参数

 ```js
 {
 	name:'xiangqing',
 	path:'detail/:id',
 	component:Detail,

 	//第一种写法 写死的：props值为对象，该对象中所有的key-value的组合最终都会通过props传给Detail组件
 	// props:{a:900}

 	Detail.vue中
 	 <li>a:{{a}}</li>
      <li>b:{{b}}</li>

 	  props:['a','b'],

 	//第二种写法（query传参时候不能用）：props值为布尔值，布尔值为true，则把路由收到的所有params参数通过props传给Detail组件
 	// props:true

 	Detail.vue中

        <li>消息编号：{{id}}</li>
         <li>消息编号：{{title}}</li>

     	  props:['id','title'],

 	//第三种写法：props值为函数，该函数返回的对象中每一组key-value都会通过props传给Detail组件
 	props(route){
 		return {
 			id:route.query.id,
 			title:route.query.title
 		}
 	}

 	或者
 	//解构赋值写法，效果一样

    props({params:{id,title}}){
        return {id,title}
    }

 	Detail.vue中
 	    <li>消息编号：{{id}}</li>
            <li>消息编号：{{title}}</li>

           props:['id','title'],
 }
 ```


=========================================
路由的params参数

1、Message.vue
params参数
:to="`/home/message/detail/666/hello`"
query传递参数
to="/home/message/detail?id=666&title=hello"

2、 index.jsp
   path: 'detail/:id/:title',

3、Detail.vue
 从$route中params属性接收参数
   <li>消息编号：{{$route.params.id}}</li>


 坑！！！    > 特别注意：路由携带params参数时，若使用to的对象写法，则不能使用path配置项，必须使用name配置！
================================
命名路由
1、route文件夹里面index.jsp里面给About和Detail命名
2、好处：可以简化路由的跳转。
3、回到Message.vue，有了名字，就不用写path
==================================
query传递参数
to="/home/message/detail?id=666&title=hello"

包含三级路由
1、Message组件，遍历谁<ul>里面有一堆<li>，就遍历它，在后面加上v-for
2、新的导航区和展示区出现，用路由组件Detail.vue
3、需求：点击消息001还是消息002，跳转路径都是一样：/home/message/detail
4、在Message.vue发送参数（形式和jQuery一样），
   在Detail.vue接收参数（使用$route.query.XXX）

==================================
嵌套（多级）路由
1、先写好Message组件和News组件，放在pages文件夹内
2、在route里面的index.js配置 子路由规则
3、回到Home组件:  跳转（要写完整路径）

==================================


安装 npm i vue-router

1、在main.js

//引入路由
import VueRouter from 'vue-router'
//应用路由插件
Vue.use(VueRouter)


2、创建router文件夹，里面创建index.js(专门用于创建整个应用的路由器)
可以使用router属性

3、回到main.js
   //引入路由器
   import router from './router'

4、App.vue

   <router-link>标签实现路由的切换
   跳转不用href而是用to, active-class点击时候会高亮
   实现效果，点击导航栏，上面的网址会改变，比如
   点击Home ==> http://localhost:8080/#/home

   指定组件的呈现位置
   <router-view></router-view>

二、
把顶部区域变成一个组件---Banner.vue(一般组件）

文件夹pages：放路由组件
文件夹components: 放一般组件

不用的路由组件：被销毁了
==========================================
